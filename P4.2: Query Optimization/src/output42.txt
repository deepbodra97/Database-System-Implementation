TC1
plan(): Done
DeepDB> CNF is correct
Statistics.txt has been loaded
makeLeafs:nation
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_name,3| right->value:UNITED STATES,4
return=1
pushed:0x5625fd293070
relNames:nation
numToJoin:1
ptrAND:0x5625fd293070
left child of type NAME
leftAttribute=n.n_name
relNames:nation
numToJoin:1
ptrAND:0x5625fd293070
left child of type NAME
leftAttribute=n.n_name
here
-> WriteOut:    * Output to 0x1
   * Output schema:
  Att0: n.n_nationkey int
   * Output pipe: 2
   * Input pipe: 1
   -> Project: 0
      * 4 input attributes; 1 output attributes
      * Output schema:
  Att0: n.n_nationkey int
      * Output pipe: 1
      * Input pipe: 0
      -> Select from nation: ( Att 1 from left record = Att 0 from literal record (String)) 
         * Output schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
         * Output pipe: 0
outName:output.txtstdout:0x7f6d3b0fc760
outFile:0x5625fd294620
dbName=nation.bin relNames[0]=nation
RelOp:WriteOut
  Att0: n.n_nationkey int
Project output
SelectFile output
@***************************************************************************************************************************
TC2
plan(): Done
DeepDB> CNF is correct
Statistics.txt has been loaded
makeLeafs:region
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=0
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
left:n.n_nationkey,3| right->value:5,2
return=1
pushed:0
here
makeLeafs:nation
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_nationkey,3| right->value:5,2
return=1
pushed:0x55bc26b61190
relNames:nation
numToJoin:1
ptrAND:0x55bc26b61190
left child of type NAME
leftAttribute=n.n_nationkey
relNames:nation
numToJoin:1
ptrAND:0x55bc26b61190
left child of type NAME
leftAttribute=n.n_nationkey
here
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
relNames:nation
numToJoin:2
ptrAND:0x55bc26b611b0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:nation
numToJoin:2
ptrAND:0x55bc26b611b0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
JoinNode:cost=24
BinaryNode Schema:
  Att0: r.r_regionkey int
  Att1: r.r_name string
  Att2: r.r_comment string
  Att3: n.n_nationkey int
  Att4: n.n_name string
  Att5: n.n_regionkey int
  Att6: n.n_comment string
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=0
relNames:region
numToJoin:2
ptrAND:0x55bc26b611b0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:region
numToJoin:2
ptrAND:0x55bc26b611b0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
JoinNode:cost=24
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
relNames:nation
numToJoin:2
ptrAND:0x55bc26b611b0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:nation
numToJoin:2
ptrAND:0x55bc26b611b0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
JoinNode:cost=24
-> WriteOut:    * Output to 0x1
   * Output schema:
  Att0: n.n_name string
   * Output pipe: 4
   * Input pipe: 3
   -> Project: 0
      * 7 input attributes; 1 output attributes
      * Output schema:
  Att0: n.n_name string
      * Output pipe: 3
      * Input pipe: 2
      -> Join: ( Att 2 from left record = Att 0 from right record (Int)) 
         * Estimate = 24, Cost = 24
         * Output schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
         * Output pipe: 2
         * Input pipe: 1, 0
         -> Select from nation: ( Att 0 from left record > Att 0 from literal record (Int)) 
            * Output schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
            * Output pipe: 1
         -> Select from region:             * Output schema:
  Att0: r.r_regionkey int
  Att1: r.r_name string
  Att2: r.r_comment string
            * Output pipe: 0
outName:output.txtstdout:0x7f272de86760
outFile:0x55bc26b62690
dbName=nation.bin relNames[0]=nation
dbName=region.bin relNames[0]=region
RelOp:WriteOut
  Att0: n.n_name string
Project output
SortMergeJoin output
SelectFile output
SelectFile output
 ***************************************************************************************************************************
TC3
plan(): Done
DeepDB> CNF is correct
Statistics.txt has been loaded
makeLeafs:region
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=0
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
left:n.n_name,3| right->value:UNITED STATES,4
return=1
pushed:0
here
makeLeafs:nation
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_name,3| right->value:UNITED STATES,4
return=1
pushed:0x55e2211cd1c0
relNames:nation
numToJoin:1
ptrAND:0x55e2211cd1c0
left child of type NAME
leftAttribute=n.n_name
relNames:nation
numToJoin:1
ptrAND:0x55e2211cd1c0
left child of type NAME
leftAttribute=n.n_name
here
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
relNames:nation
numToJoin:2
ptrAND:0x55e2211cd1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:nation
numToJoin:2
ptrAND:0x55e2211cd1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
JoinNode:cost=24
BinaryNode Schema:
  Att0: r.r_regionkey int
  Att1: r.r_name string
  Att2: r.r_comment string
  Att3: n.n_nationkey int
  Att4: n.n_name string
  Att5: n.n_regionkey int
  Att6: n.n_comment string
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=0
relNames:region
numToJoin:2
ptrAND:0x55e2211cd1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:region
numToJoin:2
ptrAND:0x55e2211cd1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
JoinNode:cost=24
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
relNames:nation
numToJoin:2
ptrAND:0x55e2211cd1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:nation
numToJoin:2
ptrAND:0x55e2211cd1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
JoinNode:cost=24
-> WriteOut:    * Output to 0x1
   * Output schema:
  Att0: sum int
   * Output pipe: 4
   * Input pipe: 3
   -> Sum:       * Function:       * Output schema:
  Att0: sum int
      * Output pipe: 3
      * Input pipe: 2
      -> Join: ( Att 2 from left record = Att 0 from right record (Int)) 
         * Estimate = 24, Cost = 24
         * Output schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
         * Output pipe: 2
         * Input pipe: 1, 0
         -> Select from nation: ( Att 1 from left record = Att 0 from literal record (String)) 
            * Output schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
            * Output pipe: 1
         -> Select from region:             * Output schema:
  Att0: r.r_regionkey int
  Att1: r.r_name string
  Att2: r.r_comment string
            * Output pipe: 0
outName:output.txtstdout:0x7f847f3fd760
outFile:0x55e2211ce6c0
dbName=nation.bin relNames[0]=nation
dbName=region.bin relNames[0]=region
RelOp:WriteOut
  Att0: sum int
SortMergeJoin output
SelectFile output
SelectFile output
 ***************************************************************************************************************************
TC4
plan(): Done
DeepDB> CNF is correct
Statistics.txt has been loaded
makeLeafs:region
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=0
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
left:n.n_name,3| right->value:UNITED STATES,4
return=1
pushed:0
here
makeLeafs:nation
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_name,3| right->value:UNITED STATES,4
return=1
pushed:0x56071195f1c0
relNames:nation
numToJoin:1
ptrAND:0x56071195f1c0
left child of type NAME
leftAttribute=n.n_name
relNames:nation
numToJoin:1
ptrAND:0x56071195f1c0
left child of type NAME
leftAttribute=n.n_name
here
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
relNames:nation
numToJoin:2
ptrAND:0x56071195f1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:nation
numToJoin:2
ptrAND:0x56071195f1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
JoinNode:cost=24
BinaryNode Schema:
  Att0: r.r_regionkey int
  Att1: r.r_name string
  Att2: r.r_comment string
  Att3: n.n_nationkey int
  Att4: n.n_name string
  Att5: n.n_regionkey int
  Att6: n.n_comment string
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=0
relNames:region
numToJoin:2
ptrAND:0x56071195f1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:region
numToJoin:2
ptrAND:0x56071195f1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
JoinNode:cost=24
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
relNames:nation
numToJoin:2
ptrAND:0x56071195f1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:nation
numToJoin:2
ptrAND:0x56071195f1e0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
JoinNode:cost=24
-> WriteOut:    * Output to 0x1
   * Output schema:
  Att0: sum int
  Att1: n.n_regionkey int
   * Output pipe: 4
   * Input pipe: 3
   -> Group by:       * OrderMaker: NumAtts =     1
  0:     2 Int
      * Function:       * Output schema:
  Att0: sum int
  Att1: n.n_regionkey int
      * Output pipe: 3
      * Input pipe: 2
      -> Join: ( Att 2 from left record = Att 0 from right record (Int)) 
         * Estimate = 24, Cost = 24
         * Output schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
         * Output pipe: 2
         * Input pipe: 1, 0
         -> Select from nation: ( Att 1 from left record = Att 0 from literal record (String)) 
            * Output schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
            * Output pipe: 1
         -> Select from region:             * Output schema:
  Att0: r.r_regionkey int
  Att1: r.r_name string
  Att2: r.r_comment string
            * Output pipe: 0
outName:output.txtstdout:0x7f4a87ec4760
outFile:0x560711960700
dbName=nation.bin relNames[0]=nation
dbName=region.bin relNames[0]=region
RelOp:WriteOut
  Att0: sum int
  Att1: n.n_regionkey int
GroupBy ordermaker
NumAtts =     1
  0:     2 Int
SortMergeJoin output
SelectFile output
SelectFile output
 ***************************************************************************************************************************
TC5
plan(): Done
DeepDB> CNF is correct
Statistics.txt has been loaded
makeLeafs:customer
containedIn:ors
containedIn:cmp
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
containedIn:ors
containedIn:cmp
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
containedIn:ors
containedIn:cmp
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
left:n.n_nationkey,3| right->value:10,2
return=1
pushed:0
here
makeLeafs:region
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=0
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
left:n.n_nationkey,3| right->value:10,2
return=1
pushed:0
here
makeLeafs:nation
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_nationkey,3| right->value:10,2
return=1
pushed:0x564c850b8380
relNames:nation
numToJoin:1
ptrAND:0x564c850b8380
left child of type NAME
leftAttribute=n.n_nationkey
relNames:nation
numToJoin:1
ptrAND:0x564c850b8380
left child of type NAME
leftAttribute=n.n_nationkey
here
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
relNames:nation
numToJoin:2
ptrAND:0x564c850b83c0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:nation
numToJoin:2
ptrAND:0x564c850b83c0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
JoinNode:cost=24
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
  Att7: c.c_custkey int
  Att8: c.c_name string
  Att9: c.c_address string
  Att10: c.c_nationkey int
  Att11: c.c_phone string
  Att12: c.c_acctbal double
  Att13: c.c_mktsegment string
  Att14: c.c_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
relNames:nation
numToJoin:3
ptrAND:0x564c850b83a0
left child of type NAME
leftAttribute=n.n_nationkey
right child of type NAME
rightAttribute=c.c_nationkey
join relations:n_r<->c
relNames:nation
numToJoin:3
ptrAND:0x564c850b83a0
left child of type NAME
leftAttribute=n.n_nationkey
right child of type NAME
rightAttribute=c.c_nationkey
join relations:n_r<->c
JoinNode:cost=150024
BinaryNode Schema:
  Att0: r.r_regionkey int
  Att1: r.r_name string
  Att2: r.r_comment string
  Att3: n.n_nationkey int
  Att4: n.n_name string
  Att5: n.n_regionkey int
  Att6: n.n_comment string
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=0
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
relNames:region
numToJoin:2
ptrAND:0x564c850b83c0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:region
numToJoin:2
ptrAND:0x564c850b83c0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
JoinNode:cost=24
BinaryNode Schema:
  Att0: r.r_regionkey int
  Att1: r.r_name string
  Att2: r.r_comment string
  Att3: n.n_nationkey int
  Att4: n.n_name string
  Att5: n.n_regionkey int
  Att6: n.n_comment string
  Att7: c.c_custkey int
  Att8: c.c_name string
  Att9: c.c_address string
  Att10: c.c_nationkey int
  Att11: c.c_phone string
  Att12: c.c_acctbal double
  Att13: c.c_mktsegment string
  Att14: c.c_comment string
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
relNames:region
numToJoin:3
ptrAND:0x564c850b83a0
left child of type NAME
leftAttribute=n.n_nationkey
right child of type NAME
rightAttribute=c.c_nationkey
join relations:n_r<->c
relNames:region
numToJoin:3
ptrAND:0x564c850b83a0
left child of type NAME
leftAttribute=n.n_nationkey
right child of type NAME
rightAttribute=c.c_nationkey
join relations:n_r<->c
JoinNode:cost=150024
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: c.c_custkey int
  Att5: c.c_name string
  Att6: c.c_address string
  Att7: c.c_nationkey int
  Att8: c.c_phone string
  Att9: c.c_acctbal double
  Att10: c.c_mktsegment string
  Att11: c.c_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
relNames:nation
numToJoin:2
ptrAND:0x564c850b83a0
left child of type NAME
leftAttribute=n.n_nationkey
right child of type NAME
rightAttribute=c.c_nationkey
join relations:n<->c
relNames:nation
numToJoin:2
ptrAND:0x564c850b83a0
left child of type NAME
leftAttribute=n.n_nationkey
right child of type NAME
rightAttribute=c.c_nationkey
join relations:n<->c
JoinNode:cost=150000
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: c.c_custkey int
  Att5: c.c_name string
  Att6: c.c_address string
  Att7: c.c_nationkey int
  Att8: c.c_phone string
  Att9: c.c_acctbal double
  Att10: c.c_mktsegment string
  Att11: c.c_comment string
  Att12: r.r_regionkey int
  Att13: r.r_name string
  Att14: r.r_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
relNames:nation
numToJoin:3
ptrAND:0x564c850b83c0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n_c<->r
relNames:nation
numToJoin:3
ptrAND:0x564c850b83c0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n_c<->r
JoinNode:cost=299999
BinaryNode Schema:
  Att0: c.c_custkey int
  Att1: c.c_name string
  Att2: c.c_address string
  Att3: c.c_nationkey int
  Att4: c.c_phone string
  Att5: c.c_acctbal double
  Att6: c.c_mktsegment string
  Att7: c.c_comment string
  Att8: n.n_nationkey int
  Att9: n.n_name string
  Att10: n.n_regionkey int
  Att11: n.n_comment string
containedIn:ors
containedIn:cmp
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
containedIn:ors
containedIn:cmp
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
relNames:customer
numToJoin:2
ptrAND:0x564c850b83a0
left child of type NAME
leftAttribute=n.n_nationkey
right child of type NAME
rightAttribute=c.c_nationkey
join relations:n<->c
relNames:customer
numToJoin:2
ptrAND:0x564c850b83a0
left child of type NAME
leftAttribute=n.n_nationkey
right child of type NAME
rightAttribute=c.c_nationkey
join relations:n<->c
JoinNode:cost=150000
BinaryNode Schema:
  Att0: c.c_custkey int
  Att1: c.c_name string
  Att2: c.c_address string
  Att3: c.c_nationkey int
  Att4: c.c_phone string
  Att5: c.c_acctbal double
  Att6: c.c_mktsegment string
  Att7: c.c_comment string
  Att8: n.n_nationkey int
  Att9: n.n_name string
  Att10: n.n_regionkey int
  Att11: n.n_comment string
  Att12: r.r_regionkey int
  Att13: r.r_name string
  Att14: r.r_comment string
containedIn:ors
containedIn:cmp
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
relNames:customer
numToJoin:3
ptrAND:0x564c850b83c0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n_c<->r
relNames:customer
numToJoin:3
ptrAND:0x564c850b83c0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n_c<->r
JoinNode:cost=299999
BinaryNode Schema:
  Att0: r.r_regionkey int
  Att1: r.r_name string
  Att2: r.r_comment string
  Att3: c.c_custkey int
  Att4: c.c_name string
  Att5: c.c_address string
  Att6: c.c_nationkey int
  Att7: c.c_phone string
  Att8: c.c_acctbal double
  Att9: c.c_mktsegment string
  Att10: c.c_comment string
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
containedIn:ors
containedIn:cmp
r.r_regionkey
r.r_name
r.r_comment
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=0
Error: parseTree=NULL and numToJoin>1Error: parseTree=NULL and numToJoin>1JoinNode:cost=-1
BinaryNode Schema:
  Att0: c.c_custkey int
  Att1: c.c_name string
  Att2: c.c_address string
  Att3: c.c_nationkey int
  Att4: c.c_phone string
  Att5: c.c_acctbal double
  Att6: c.c_mktsegment string
  Att7: c.c_comment string
  Att8: r.r_regionkey int
  Att9: r.r_name string
  Att10: r.r_comment string
containedIn:ors
containedIn:cmp
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
containedIn:ors
containedIn:cmp
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
Error: parseTree=NULL and numToJoin>1Error: parseTree=NULL and numToJoin>1JoinNode:cost=-1
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
left:n.n_regionkey,3| right->value:r.r_regionkey,3
return=1
relNames:nation
numToJoin:2
ptrAND:0x564c850b83c0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
relNames:nation
numToJoin:2
ptrAND:0x564c850b83c0
left child of type NAME
leftAttribute=n.n_regionkey
right child of type NAME
rightAttribute=r.r_regionkey
join relations:n<->r
JoinNode:cost=24
BinaryNode Schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
  Att7: c.c_custkey int
  Att8: c.c_name string
  Att9: c.c_address string
  Att10: c.c_nationkey int
  Att11: c.c_phone string
  Att12: c.c_acctbal double
  Att13: c.c_mktsegment string
  Att14: c.c_comment string
containedIn:ors
containedIn:cmp
n.n_nationkey
n.n_name
n.n_regionkey
n.n_comment
r.r_regionkey
r.r_name
r.r_comment
c.c_custkey
c.c_name
c.c_address
c.c_nationkey
c.c_phone
c.c_acctbal
c.c_mktsegment
c.c_comment
left:n.n_nationkey,3| right->value:c.c_nationkey,3
return=1
relNames:nation
numToJoin:3
ptrAND:0x564c850b83a0
left child of type NAME
leftAttribute=n.n_nationkey
right child of type NAME
rightAttribute=c.c_nationkey
join relations:n_r<->c
relNames:nation
numToJoin:3
ptrAND:0x564c850b83a0
left child of type NAME
leftAttribute=n.n_nationkey
right child of type NAME
rightAttribute=c.c_nationkey
join relations:n_r<->c
JoinNode:cost=150024
-> WriteOut:    * Output to 0x1
   * Output schema:
  Att0: sum int
  Att1: r.r_regionkey int
   * Output pipe: 7
   * Input pipe: 6
   -> Group by:       * OrderMaker: NumAtts =     1
  0:     4 Int
      * Function:       * Output schema:
  Att0: sum int
  Att1: r.r_regionkey int
      * Output pipe: 6
      * Input pipe: 5
      -> Deduplication:          * Output schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
  Att7: c.c_custkey int
  Att8: c.c_name string
  Att9: c.c_address string
  Att10: c.c_nationkey int
  Att11: c.c_phone string
  Att12: c.c_acctbal double
  Att13: c.c_mktsegment string
  Att14: c.c_comment string
         * Output pipe: 5
         * Input pipe: 4
         -> Join: ( Att 0 from left record = Att 3 from right record (Int)) 
            * Estimate = 150000, Cost = 150024
            * Output schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
  Att7: c.c_custkey int
  Att8: c.c_name string
  Att9: c.c_address string
  Att10: c.c_nationkey int
  Att11: c.c_phone string
  Att12: c.c_acctbal double
  Att13: c.c_mktsegment string
  Att14: c.c_comment string
            * Output pipe: 4
            * Input pipe: 3, 0
            -> Join: ( Att 2 from left record = Att 0 from right record (Int)) 
               * Estimate = 24, Cost = 24
               * Output schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
  Att4: r.r_regionkey int
  Att5: r.r_name string
  Att6: r.r_comment string
               * Output pipe: 3
               * Input pipe: 2, 1
               -> Select from nation: ( Att 0 from left record > Att 0 from literal record (Int)) 
                  * Output schema:
  Att0: n.n_nationkey int
  Att1: n.n_name string
  Att2: n.n_regionkey int
  Att3: n.n_comment string
                  * Output pipe: 2
               -> Select from region:                   * Output schema:
  Att0: r.r_regionkey int
  Att1: r.r_name string
  Att2: r.r_comment string
                  * Output pipe: 1
            -> Select from customer:                * Output schema:
  Att0: c.c_custkey int
  Att1: c.c_name string
  Att2: c.c_address string
  Att3: c.c_nationkey int
  Att4: c.c_phone string
  Att5: c.c_acctbal double
  Att6: c.c_mktsegment string
  Att7: c.c_comment string
               * Output pipe: 0
outName:output.txtstdout:0x7fa90d4b1760
outFile:0x564c850b9b60
dbName=nation.bin relNames[0]=nation
dbName=region.bin relNames[0]=region
dbName=customer.bin relNames[0]=customer
SortMergeJoin output
GroupBy ordermaker
NumAtts =     1
  0:     4 Int
RelOp:WriteOut
  Att0: sum int
  Att1: r.r_regionkey int
SelectFile output
SortMergeJoin output
SelectFile output
SelectFile output
***************************************************************************************************************************
TC6
plan(): Done
DeepDB> CNF is correct
Statistics.txt has been loaded
makeLeafs:partsupp
containedIn:ors
containedIn:cmp
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=0
containedIn:ors
containedIn:cmp
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
containedIn:ors
containedIn:cmp
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
left:s.s_acctbal,3| right->value:2500.0,1
return=1
pushed:0
here
makeLeafs:supplier
containedIn:ors
containedIn:cmp
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=1
containedIn:ors
containedIn:cmp
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
containedIn:ors
containedIn:cmp
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
left:s.s_acctbal,3| right->value:2500.0,1
return=1
pushed:0x564cf0797320
relNames:supplier
numToJoin:1
ptrAND:0x564cf0797320
left child of type NAME
leftAttribute=s.s_acctbal
relNames:supplier
numToJoin:1
ptrAND:0x564cf0797320
left child of type NAME
leftAttribute=s.s_acctbal
here
makeLeafs:part
containedIn:ors
containedIn:cmp
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=1
containedIn:ors
containedIn:cmp
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
pushed:0
here
BinaryNode Schema:
  Att0: p.p_partkey int
  Att1: p.p_name string
  Att2: p.p_mfgr string
  Att3: p.p_brand string
  Att4: p.p_type string
  Att5: p.p_size int
  Att6: p.p_container string
  Att7: p.p_retailprice double
  Att8: p.p_comment string
  Att9: s.s_suppkey int
  Att10: s.s_name string
  Att11: s.s_address string
  Att12: s.s_nationkey int
  Att13: s.s_phone string
  Att14: s.s_acctbal double
  Att15: s.s_comment string
containedIn:ors
containedIn:cmp
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=1
containedIn:ors
containedIn:cmp
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
Error: parseTree=NULL and numToJoin>1Error: parseTree=NULL and numToJoin>1JoinNode:cost=-1
BinaryNode Schema:
  Att0: s.s_suppkey int
  Att1: s.s_name string
  Att2: s.s_address string
  Att3: s.s_nationkey int
  Att4: s.s_phone string
  Att5: s.s_acctbal double
  Att6: s.s_comment string
  Att7: p.p_partkey int
  Att8: p.p_name string
  Att9: p.p_mfgr string
  Att10: p.p_brand string
  Att11: p.p_type string
  Att12: p.p_size int
  Att13: p.p_container string
  Att14: p.p_retailprice double
  Att15: p.p_comment string
containedIn:ors
containedIn:cmp
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=1
containedIn:ors
containedIn:cmp
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
Error: parseTree=NULL and numToJoin>1Error: parseTree=NULL and numToJoin>1JoinNode:cost=-1
BinaryNode Schema:
  Att0: p.p_partkey int
  Att1: p.p_name string
  Att2: p.p_mfgr string
  Att3: p.p_brand string
  Att4: p.p_type string
  Att5: p.p_size int
  Att6: p.p_container string
  Att7: p.p_retailprice double
  Att8: p.p_comment string
  Att9: ps.ps_partkey int
  Att10: ps.ps_suppkey int
  Att11: ps.ps_availqty int
  Att12: ps.ps_supplycost double
  Att13: ps.ps_comment string
containedIn:ors
containedIn:cmp
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=1
containedIn:ors
containedIn:cmp
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
relNames:part
numToJoin:2
ptrAND:0x564cf0797360
left child of type NAME
leftAttribute=p.p_partkey
right child of type NAME
rightAttribute=ps.ps_partkey
join relations:p<->ps
relNames:part
numToJoin:2
ptrAND:0x564cf0797360
left child of type NAME
leftAttribute=p.p_partkey
right child of type NAME
rightAttribute=ps.ps_partkey
join relations:p<->ps
JoinNode:cost=800000
BinaryNode Schema:
  Att0: p.p_partkey int
  Att1: p.p_name string
  Att2: p.p_mfgr string
  Att3: p.p_brand string
  Att4: p.p_type string
  Att5: p.p_size int
  Att6: p.p_container string
  Att7: p.p_retailprice double
  Att8: p.p_comment string
  Att9: ps.ps_partkey int
  Att10: ps.ps_suppkey int
  Att11: ps.ps_availqty int
  Att12: ps.ps_supplycost double
  Att13: ps.ps_comment string
  Att14: s.s_suppkey int
  Att15: s.s_name string
  Att16: s.s_address string
  Att17: s.s_nationkey int
  Att18: s.s_phone string
  Att19: s.s_acctbal double
  Att20: s.s_comment string
containedIn:ors
containedIn:cmp
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
relNames:part
numToJoin:3
ptrAND:0x564cf0797340
left child of type NAME
leftAttribute=s.s_suppkey
right child of type NAME
rightAttribute=ps.ps_suppkey
join relations:s<->p_ps
relNames:part
numToJoin:3
ptrAND:0x564cf0797340
left child of type NAME
leftAttribute=s.s_suppkey
right child of type NAME
rightAttribute=ps.ps_suppkey
join relations:s<->p_ps
JoinNode:cost=1599999
BinaryNode Schema:
  Att0: ps.ps_partkey int
  Att1: ps.ps_suppkey int
  Att2: ps.ps_availqty int
  Att3: ps.ps_supplycost double
  Att4: ps.ps_comment string
  Att5: p.p_partkey int
  Att6: p.p_name string
  Att7: p.p_mfgr string
  Att8: p.p_brand string
  Att9: p.p_type string
  Att10: p.p_size int
  Att11: p.p_container string
  Att12: p.p_retailprice double
  Att13: p.p_comment string
containedIn:ors
containedIn:cmp
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=0
containedIn:ors
containedIn:cmp
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
relNames:partsupp
numToJoin:2
ptrAND:0x564cf0797360
left child of type NAME
leftAttribute=p.p_partkey
right child of type NAME
rightAttribute=ps.ps_partkey
join relations:p<->ps
relNames:partsupp
numToJoin:2
ptrAND:0x564cf0797360
left child of type NAME
leftAttribute=p.p_partkey
right child of type NAME
rightAttribute=ps.ps_partkey
join relations:p<->ps
JoinNode:cost=800000
BinaryNode Schema:
  Att0: ps.ps_partkey int
  Att1: ps.ps_suppkey int
  Att2: ps.ps_availqty int
  Att3: ps.ps_supplycost double
  Att4: ps.ps_comment string
  Att5: p.p_partkey int
  Att6: p.p_name string
  Att7: p.p_mfgr string
  Att8: p.p_brand string
  Att9: p.p_type string
  Att10: p.p_size int
  Att11: p.p_container string
  Att12: p.p_retailprice double
  Att13: p.p_comment string
  Att14: s.s_suppkey int
  Att15: s.s_name string
  Att16: s.s_address string
  Att17: s.s_nationkey int
  Att18: s.s_phone string
  Att19: s.s_acctbal double
  Att20: s.s_comment string
containedIn:ors
containedIn:cmp
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
relNames:partsupp
numToJoin:3
ptrAND:0x564cf0797340
left child of type NAME
leftAttribute=s.s_suppkey
right child of type NAME
rightAttribute=ps.ps_suppkey
join relations:s<->p_ps
relNames:partsupp
numToJoin:3
ptrAND:0x564cf0797340
left child of type NAME
leftAttribute=s.s_suppkey
right child of type NAME
rightAttribute=ps.ps_suppkey
join relations:s<->p_ps
JoinNode:cost=1599999
BinaryNode Schema:
  Att0: s.s_suppkey int
  Att1: s.s_name string
  Att2: s.s_address string
  Att3: s.s_nationkey int
  Att4: s.s_phone string
  Att5: s.s_acctbal double
  Att6: s.s_comment string
  Att7: ps.ps_partkey int
  Att8: ps.ps_suppkey int
  Att9: ps.ps_availqty int
  Att10: ps.ps_supplycost double
  Att11: ps.ps_comment string
containedIn:ors
containedIn:cmp
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=1
containedIn:ors
containedIn:cmp
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
relNames:supplier
numToJoin:2
ptrAND:0x564cf0797340
left child of type NAME
leftAttribute=s.s_suppkey
right child of type NAME
rightAttribute=ps.ps_suppkey
join relations:s<->ps
relNames:supplier
numToJoin:2
ptrAND:0x564cf0797340
left child of type NAME
leftAttribute=s.s_suppkey
right child of type NAME
rightAttribute=ps.ps_suppkey
join relations:s<->ps
JoinNode:cost=799999
BinaryNode Schema:
  Att0: s.s_suppkey int
  Att1: s.s_name string
  Att2: s.s_address string
  Att3: s.s_nationkey int
  Att4: s.s_phone string
  Att5: s.s_acctbal double
  Att6: s.s_comment string
  Att7: ps.ps_partkey int
  Att8: ps.ps_suppkey int
  Att9: ps.ps_availqty int
  Att10: ps.ps_supplycost double
  Att11: ps.ps_comment string
  Att12: p.p_partkey int
  Att13: p.p_name string
  Att14: p.p_mfgr string
  Att15: p.p_brand string
  Att16: p.p_type string
  Att17: p.p_size int
  Att18: p.p_container string
  Att19: p.p_retailprice double
  Att20: p.p_comment string
containedIn:ors
containedIn:cmp
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=1
relNames:supplier
numToJoin:3
ptrAND:0x564cf0797360
left child of type NAME
leftAttribute=p.p_partkey
right child of type NAME
rightAttribute=ps.ps_partkey
join relations:p<->s_ps
relNames:supplier
numToJoin:3
ptrAND:0x564cf0797360
left child of type NAME
leftAttribute=p.p_partkey
right child of type NAME
rightAttribute=ps.ps_partkey
join relations:p<->s_ps
JoinNode:cost=1599999
BinaryNode Schema:
  Att0: ps.ps_partkey int
  Att1: ps.ps_suppkey int
  Att2: ps.ps_availqty int
  Att3: ps.ps_supplycost double
  Att4: ps.ps_comment string
  Att5: s.s_suppkey int
  Att6: s.s_name string
  Att7: s.s_address string
  Att8: s.s_nationkey int
  Att9: s.s_phone string
  Att10: s.s_acctbal double
  Att11: s.s_comment string
containedIn:ors
containedIn:cmp
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
containedIn:ors
containedIn:cmp
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=0
relNames:partsupp
numToJoin:2
ptrAND:0x564cf0797340
left child of type NAME
leftAttribute=s.s_suppkey
right child of type NAME
rightAttribute=ps.ps_suppkey
join relations:s<->ps
relNames:partsupp
numToJoin:2
ptrAND:0x564cf0797340
left child of type NAME
leftAttribute=s.s_suppkey
right child of type NAME
rightAttribute=ps.ps_suppkey
join relations:s<->ps
JoinNode:cost=799999
BinaryNode Schema:
  Att0: ps.ps_partkey int
  Att1: ps.ps_suppkey int
  Att2: ps.ps_availqty int
  Att3: ps.ps_supplycost double
  Att4: ps.ps_comment string
  Att5: s.s_suppkey int
  Att6: s.s_name string
  Att7: s.s_address string
  Att8: s.s_nationkey int
  Att9: s.s_phone string
  Att10: s.s_acctbal double
  Att11: s.s_comment string
  Att12: p.p_partkey int
  Att13: p.p_name string
  Att14: p.p_mfgr string
  Att15: p.p_brand string
  Att16: p.p_type string
  Att17: p.p_size int
  Att18: p.p_container string
  Att19: p.p_retailprice double
  Att20: p.p_comment string
containedIn:ors
containedIn:cmp
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=0
relNames:partsupp
numToJoin:3
ptrAND:0x564cf0797360
left child of type NAME
leftAttribute=p.p_partkey
right child of type NAME
rightAttribute=ps.ps_partkey
join relations:p<->s_ps
relNames:partsupp
numToJoin:3
ptrAND:0x564cf0797360
left child of type NAME
leftAttribute=p.p_partkey
right child of type NAME
rightAttribute=ps.ps_partkey
join relations:p<->s_ps
JoinNode:cost=1599999
BinaryNode Schema:
  Att0: p.p_partkey int
  Att1: p.p_name string
  Att2: p.p_mfgr string
  Att3: p.p_brand string
  Att4: p.p_type string
  Att5: p.p_size int
  Att6: p.p_container string
  Att7: p.p_retailprice double
  Att8: p.p_comment string
  Att9: ps.ps_partkey int
  Att10: ps.ps_suppkey int
  Att11: ps.ps_availqty int
  Att12: ps.ps_supplycost double
  Att13: ps.ps_comment string
containedIn:ors
containedIn:cmp
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
containedIn:ors
containedIn:cmp
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
left:p.p_partkey,3| right->value:ps.ps_partkey,3
return=1
relNames:part
numToJoin:2
ptrAND:0x564cf0797360
left child of type NAME
leftAttribute=p.p_partkey
right child of type NAME
rightAttribute=ps.ps_partkey
join relations:p<->ps
relNames:part
numToJoin:2
ptrAND:0x564cf0797360
left child of type NAME
leftAttribute=p.p_partkey
right child of type NAME
rightAttribute=ps.ps_partkey
join relations:p<->ps
JoinNode:cost=800000
BinaryNode Schema:
  Att0: p.p_partkey int
  Att1: p.p_name string
  Att2: p.p_mfgr string
  Att3: p.p_brand string
  Att4: p.p_type string
  Att5: p.p_size int
  Att6: p.p_container string
  Att7: p.p_retailprice double
  Att8: p.p_comment string
  Att9: ps.ps_partkey int
  Att10: ps.ps_suppkey int
  Att11: ps.ps_availqty int
  Att12: ps.ps_supplycost double
  Att13: ps.ps_comment string
  Att14: s.s_suppkey int
  Att15: s.s_name string
  Att16: s.s_address string
  Att17: s.s_nationkey int
  Att18: s.s_phone string
  Att19: s.s_acctbal double
  Att20: s.s_comment string
containedIn:ors
containedIn:cmp
p.p_partkey
p.p_name
p.p_mfgr
p.p_brand
p.p_type
p.p_size
p.p_container
p.p_retailprice
p.p_comment
ps.ps_partkey
ps.ps_suppkey
ps.ps_availqty
ps.ps_supplycost
ps.ps_comment
s.s_suppkey
s.s_name
s.s_address
s.s_nationkey
s.s_phone
s.s_acctbal
s.s_comment
left:s.s_suppkey,3| right->value:ps.ps_suppkey,3
return=1
relNames:part
numToJoin:3
ptrAND:0x564cf0797340
left child of type NAME
leftAttribute=s.s_suppkey
right child of type NAME
rightAttribute=ps.ps_suppkey
join relations:s<->p_ps
relNames:part
numToJoin:3
ptrAND:0x564cf0797340
left child of type NAME
leftAttribute=s.s_suppkey
right child of type NAME
rightAttribute=ps.ps_suppkey
join relations:s<->p_ps
JoinNode:cost=1599999
-> WriteOut:    * Output to 0x1
   * Output schema:
  Att0: sum double
  Att1: s.s_suppkey int
   * Output pipe: 6
   * Input pipe: 5
   -> Group by:       * OrderMaker: NumAtts =     1
  0:    14 Int
      * Function:       * Output schema:
  Att0: sum double
  Att1: s.s_suppkey int
      * Output pipe: 5
      * Input pipe: 4
      -> Join: ( Att 0 from right record = Att 10 from left record (Int)) 
         * Estimate = 799999, Cost = 1599999
         * Output schema:
  Att0: p.p_partkey int
  Att1: p.p_name string
  Att2: p.p_mfgr string
  Att3: p.p_brand string
  Att4: p.p_type string
  Att5: p.p_size int
  Att6: p.p_container string
  Att7: p.p_retailprice double
  Att8: p.p_comment string
  Att9: ps.ps_partkey int
  Att10: ps.ps_suppkey int
  Att11: ps.ps_availqty int
  Att12: ps.ps_supplycost double
  Att13: ps.ps_comment string
  Att14: s.s_suppkey int
  Att15: s.s_name string
  Att16: s.s_address string
  Att17: s.s_nationkey int
  Att18: s.s_phone string
  Att19: s.s_acctbal double
  Att20: s.s_comment string
         * Output pipe: 4
         * Input pipe: 3, 1
         -> Join: ( Att 0 from left record = Att 0 from right record (Int)) 
            * Estimate = 800000, Cost = 800000
            * Output schema:
  Att0: p.p_partkey int
  Att1: p.p_name string
  Att2: p.p_mfgr string
  Att3: p.p_brand string
  Att4: p.p_type string
  Att5: p.p_size int
  Att6: p.p_container string
  Att7: p.p_retailprice double
  Att8: p.p_comment string
  Att9: ps.ps_partkey int
  Att10: ps.ps_suppkey int
  Att11: ps.ps_availqty int
  Att12: ps.ps_supplycost double
  Att13: ps.ps_comment string
            * Output pipe: 3
            * Input pipe: 2, 0
            -> Select from part:                * Output schema:
  Att0: p.p_partkey int
  Att1: p.p_name string
  Att2: p.p_mfgr string
  Att3: p.p_brand string
  Att4: p.p_type string
  Att5: p.p_size int
  Att6: p.p_container string
  Att7: p.p_retailprice double
  Att8: p.p_comment string
               * Output pipe: 2
            -> Select from partsupp:                * Output schema:
  Att0: ps.ps_partkey int
  Att1: ps.ps_suppkey int
  Att2: ps.ps_availqty int
  Att3: ps.ps_supplycost double
  Att4: ps.ps_comment string
               * Output pipe: 0
         -> Select from supplier: ( Att 5 from left record > Att 0 from literal record (Double)) 
            * Output schema:
  Att0: s.s_suppkey int
  Att1: s.s_name string
  Att2: s.s_address string
  Att3: s.s_nationkey int
  Att4: s.s_phone string
  Att5: s.s_acctbal double
  Att6: s.s_comment string
            * Output pipe: 1
outName:output.txtstdout:0x7fddcf7d9760
outFile:0x564cf0798bb0
dbName=part.bin relNames[0]=part
dbName=partsupp.bin relNames[0]=partsupp
dbName=supplier.bin relNames[0]=supplier
SortMergeJoin output
RelOp:WriteOut
  Att0: sum double
  Att1: s.s_suppkey int
GroupBy ordermaker
NumAtts =     1
  0:    14 Int
SelectFile output
SortMergeJoin output
SelectFile output
SelectFile output
***************************************************************************************************************************
